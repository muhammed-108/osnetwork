2.2.1 Installing and Enabling iptables
Step 1 Install iptables and enable the service.
dnf -y install iptables policycoreutils
service iptables start
systemctl enable --now iptables.service
Step 2 Check the status of iptables.service and enable it to be automatically started upon
system startup.
[root@Jumpserver ~]# systemctl status iptables
● iptables.service - IPv4 firewall with iptables
 Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)
 Active: active (exited) since Sun 2023-05-14 14:18:27 UTC; 3s ago
 Process: 1607 ExecStart=/usr/libexec/iptables/iptables.init start (code=exited, status=0/SUCCESS)
 Main PID: 1607 (code=exited, status=0/SUCCESS)
[root@Jumpserver ~]# systemctl enable --now iptables.service
Created symlink /etc/systemd/system/basic.target.wants/iptables.service →
/usr/lib/systemd/system/iptables.service.
2.2.2 Configuring JumpServer Rules
Step 1 Clear all rules.
iptables -F
Step 2 Allow IP addresses from all sources to access TCP port 22 (OpenSSH).
iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT
Step 3 Allow the local host to access TCP port 22 (OpenSSH) of all hosts on the intranet
(192.168.0.0/24).
iptables -A OUTPUT -p tcp -s 192.168.0.0/24 --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j
ACCEPT
iptables -A INPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT
Step 4 Adjust the default policy of a chain.
Following the least privilege principle:
⚫ Forbid all other input traffic by default.
⚫ Forbid the local host to forward data packets by default.
⚫ Forbid hosts to initiate external connections by default. This could effectively defend
against attacks such as reverse shell.
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

Step 5 Allow the local host to ping other hosts.
iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
Step 6 Allow the local host to access UDP port 53 (DNS) of the remote host.
iptables -A INPUT -p udp -m udp --sport 53 -j ACCEPT
iptables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
Step 7 Allow for loopback connections.
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
Step 8 Allow for established and associated input connections.
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
Step 9 Allow for established output connections.
iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
Step 10 View the configured rules and save them.
[root@Jumpserver ~]# service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables: [ OK ]


2.2.3 (Optional) Network Address Translation
iptables is often used in a network address translation (NAT) environment. NAT can
effectively reduce the number of servers with public IP addresses configured and enhance
network security.
NAT is classified into source network address translation (SNAT) and destination network
address translation (DNAT).


2.2.3.1 SNAT
Step 1 Disable Source/Destination Check.
On the JumpServer ECS details page, click the Elastic NICs tab, unfold it, and set
Source/Destination Check to OFF.

Step 2 Check whether the JumpServer can access the Internet.
[root@Jumpserver ~]# ping www.huaweicloud.com
PING koa8myv3.sslego-dk.tcloudscdn.com (110.249.196.149) 56(84) bytes of data.
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=1 ttl=51 time=26.6 ms
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=2 ttl=51 time=26.7 ms
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=3 ttl=51 time=26.6 ms
Step 3 Enable IP route forwarding of the JumpServer ECS.
sysctl -w net.ipv4.ip_forward=1
Step 4 Configure SNAT and check the configuration.
iptables -t filter -A FORWARD -j ACCEPT
iptables -t nat -A POSTROUTING -o ens3 -s 192.168.0.0/24 -j SNAT --to 192.168.0.48
iptables -t nat -nvL --line-numbers
Step 5 Save iptables configurations and enable them to be automatically started upon
system startup.
[root@Jumpserver ~]# service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables: [ OK ]
[root@Jumpserver ~]# chkconfig iptables on
Note: Forwarding request to 'systemctl enable iptables.service'.
Created symlink /etc/systemd/system/basic.target.wants/iptables.service →
/usr/lib/systemd/system/iptables.service.



Step 6 Add a route.
Select a VPC to which a route is to be added and click Route Tables. On the Route
Tables page, click Add Route.
Enter the route information as prompted. Set the default gateway of the Server to the
private IP address of JmpServer.

Step 7 Log in to the server and verify the lab result.
[root@Server ~]# ping www.huaweicloud.com
PING koa8myv3.sslego-dk.tcloudscdn.com (110.249.196.149) 56(84) bytes of data.
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=1 ttl=51 time=26.6 ms
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=2 ttl=51 time=26.7 ms
64 bytes from 110.249.196.149 (110.249.196.149): icmp_seq=3 ttl=51 time=26.6 ms

2.2.3.2 DNAT
DNAT enables external users to directly access services provided by servers without
external IP addresses.
For example, an external user can access a web application on a server without a public
IP address through the Internet (the listening port is TCP 80).
Step 1 Rewrite the destination address and port.
iptables -t nat -A PREROUTING -d 192.168.0.48 -p tcp -m tcp --dport 80 -j DNAT --to-destination
192.168.0.49:80
Step 2 Rewrite the source address.
Change the source IP address to the internal IP address of JumpServer. In this case, the
server communicates with JumpServer.
iptables -t nat -A POSTROUTING -d 192.168.0.48 -p tcp -m tcp --dport 80 -j SNAT --to-source
192.168.0.49
Step 3 Check and save DNAT configurations.
[root@Jumpserver ~]# iptables -t nat -nvL --line-numbers
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num pkts bytes target prot opt in out source destination
1 2 104 DNAT tcp -- * * 0.0.0.0/0 192.168.0.48 tcp dpt:80 to:192.168.0.49:80
Chain POSTROUTING (policy ACCEPT 2 packets, 104 bytes)
num pkts bytes target prot opt in out source destination
1 74 4680 SNAT all -- * ens3 192.168.0.0/24 0.0.0.0/0 to:192.168.0.48
2 0 0 SNAT tcp -- * * 0.0.0.0/0 192.168.0.48 tcp dpt:80 to:192.168.0.49
[root@Jumpserver ~]# service iptables save
iptables: Saving firewall rules to /etc/sysconfig/iptables: [ OK ]



Step 4 Access the JumpServer public IP address (http://123.60.49.188/) to verify the lab
result.











